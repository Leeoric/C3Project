//host
// var host = 'http://10.102.16.202:8080/3CWeb/';
var host = '/3CWeb/';
//获取来源页
var sourcePage = window.localStorage.getItem('currentPage');
//accessState为进入状态标记
//如果进入状态为1，则弹出恭喜报名成功的浮层
//如果进入状态为0，则弹出很遗憾的浮层
var accessState = 1;
//终端测试方法
var debug = false;

// 浮动层，禁止通过
var forbidden = '<div class="float-div float-div-reject hide">' +
	'<div class="float-info">' +
	'<span class="float-cancel"><img src="img/u488.png"></span>' +
	'<p>很遗憾，您未能获得主办方审核，不能参加本场会议。如有疑问请联系会议秘书或者拨打：025-68673555转0</p>' +
	'<span class="float-confirm">知道了</span>' +
	'</div>' +
	'</div>';

// 浮动层，允许通过
var allow = '<div class="float-div float-div-success hide">' +
	'<div class="float-info">' +
	'<span class="float-cancel"><img src="img/u488.png"></span>' +
	'<p>恭喜您！报名成功！</p>' +
	'<span class="float-confirm">朕已阅</span>' +
	'</div>' +
	'</div>';

//浮动层是否已经显示，如果是true才显示
var isDisplay = true;

//弹出浮动层
function enterTips(isAllow) {
	if (isAllow && isDisplay) {
		$(allow).appendTo('body').fadeIn(300);
	} else if (!isAllow && isDisplay) {
		$(forbidden).appendTo('body').fadeIn(300);
	}
	isDisplay = false;
}

//计算字符串长度(英文占1个字符，中文汉字占2个字符)
String.prototype.gblen = function () {
	var len = 0;
	for (var i = 0; i < this.length; i++) {
		if (this.charCodeAt(i) > 127 || this.charCodeAt(i) == 94) {
			len += 2;
		} else {
			len++;
		}
	}
	return len;
}

// 关闭错误提示
window.onerror = function () {
	return false;
}

function requestCmd(cmd) {
	try {
		var json = window.external.ClientFunc(cmd);
		//if(debug) alert("requestCmd.returnJson:" + json);
		if (json != null || json != undefined || json != null) {
			json = string2json(json);
		} else {
			json = undefined;
		}
		return json;
	}
	catch (e) {
	}
	return "";
}

/** *
 * json字符串转化成json对象 *
 * @param {Object} strJson
 * */
function string2json(strJson) {
	try {
		var j = "(" + strJson + ")"; // 用括号将json字符串括起来
		return eval(j); // 返回json对象
	}
	catch (e) {
		return null;
	}
}

//设置功能点日志
function writeLog(commandname, parm) {
	//console.log('功能点编号： ' + commandname + ' 功能点key&value： ' + parm);
	//先判断终端的版本
	var cmd = "{\"func\":\"querydata\", \"name\":\"version2\", \"isGlobal\":\"1\"}";
	var temp = requestCmd(cmd);
	var flag = false;
	try {
		if (parseInt(temp.result) > 141337471) {
			flag = true;
		}
	} catch (err) {
	}
	if (flag) {
		var cmd = "{\"func\":\"writeauditlog\",\"isGlobal\":\"1\",\"Commandname\":\"" + commandname + "\",\"param\":\"" + "" + "\",\"propertys\":\"" + parm + "\"}";
		requestCmd(cmd);
	}
	else {
		var cmd = "{\"func\":\"writeauditlog\",\"isGlobal\":\"1\",\"Commandname\":\"" + commandname + "\",\"param\":\"" + "" + "\"}";
		requestCmd(cmd);
	}
}

//获取报名和收藏状态
function getMtingSignupBookmark(meetingId) {
	//var meetingId = [1,2,3,5,4,84,222];
	var revdata;
	$.ajax({
		url: host + 'getMeetingAttendance.json?meetingId=' + meetingId,
		type: 'GET',
		//不可异步，必须同步！
		async: false,
		dataType: 'json',
		success: function (data) {
			//console.log(data);
			revdata = data;
		},
		error: function (error) {
			console.log(error.responseText);
		}
	});
	return revdata;
}

//将报名收藏状态数据装入会议列表数据中
function dataMix(data, signUpBookStatus) {
	//遍历会议列表和收藏报名状态
	for (var i = 0; i < data.list.length; i++) {
		for (var j = 0; j < signUpBookStatus.length; j++) {
			//如果id相等，说明是同一场会议，加入状态值
			if (signUpBookStatus[j].meetingId == data.list[i].id) {
				//console.log('已经找到状态值------------------------');
//						console.log('已经找到状态值--' + signUpBookStatus[j].meetingId);
//						console.log('收藏状态--' + signUpBookStatus[j].bookmarkStatus);
//						console.log('报名状态--' + signUpBookStatus[j].signupStatus);
				//报名
				data.list[i].signupStatus = signUpBookStatus[j].signupStatus;
				//收藏
				data.list[i].bookmarkStatus = signUpBookStatus[j].bookmarkStatus;
				//不再循环
				//console.log(i);
				break;
			} else {
				//如果两者ID对不上，说明没有报名和收藏，加入状态值
				data.list[i].signupStatus = false;
				data.list[i].bookmarkStatus = false;
				//console.log('找不到对应的会议');
			}
		}
	}
}

//处理documents!!!
function documentsHandle(data) {
	//console.log(data);
	for (var i = 0; i < data.length; i++) {
		var myDocument = {};
		myDocument.url = {
			imgUrl : []
		};
		myDocument.broadcastType = data[i].broadcastType;
		if (data[i].documents.length != 0) {
			myDocument.length = data[i].documents.length;
			for (var m = 0; m < data[i].documents.length; m++) {
				if (data[i].documents[m].type == "AUDIO") {
					myDocument.url.audioUrl = data[i].documents[m].url;
				}
				if (data[i].documents[m].type == "SHORTHAND") {
					myDocument.url.pdfUrl = data[i].documents[m].url;
				}
				if (data[i].documents[m].type == "PIC") {
					myDocument.url.imgUrl.push(data[i].documents[m].url);
				}
				if (data[i].documents[m].type == "VIDEO") {
					myDocument.url.videoUrl = data[i].documents[m].url;
				}
			}
		} else {
			myDocument.length = 0;
		}
		//console.log(myDocument);
		data[i].documents = myDocument;
	}
}

//合作伙伴渲染
function renderFriendList() {
	var clickNum = 0;
	$.ajax({
		url: host + 'getPartners.json',
		type: 'GET',
		dataType: 'json',
		headers: {'Content-Type': 'application/json'},
		success: function (data) {
			//console.log(data);
			var handlerData = {
				friendList: data
			};
			//console.log(handlerData);
			var friTpl = template('friendTpl', handlerData);
			$('#friendList').html(friTpl);
			//写入功能点
			$('#friendList').on('click', 'li a', function () {
				writeLog(901800040108, 'content=' + $(this).text());
				clickNum++;
				writeLog(901800040108, 'number=' + clickNum);
			});
		},
		error: function (error) {
			console.log(error.responseText);
		}
	});
}

//将startTime和endTime的时间格式转换过来
function stringToDate(st, et) {
	var handledDateArr = [];
	var handledDate = '';
	var handledStArr = timeHandle(st);
	var handledEtArr = timeHandle(et);
	//handledDate1 = handledStArr[0] + ' ' + handledStArr[1] + '-' + handledEtArr[1];
	var weekArr = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']
	//日期转为星期
	var week = weekArr[new Date (handledStArr[0]).getDay()];
	//["2017", "03", "10"]
	if (!handledStArr[0] || handledStArr[0] == 'null') {
		var fullDateString = [null, null, null];
	} else {
		var fullDateString = handledStArr[0].split("-");
	}


	//年月日
	handledDateArr.push(fullDateString[0] + '-');
	handledDateArr.push(fullDateString[1] + '-' + fullDateString[2]);
	//星期
	handledDateArr.push(week);
	//开始结束时分
	handledDateArr.push(handledStArr[1] + '-' + handledEtArr[1]);
	//console.log(handledDateArr);
	//['2017-', '03-10', '周五', '09:30-10:00']
	return handledDateArr;
}

//处理时间格式核心函数
//接收 "2017-03-10 09:30:00"
//返回 ["2017-03-10", "09:30"]
function timeHandle(time) {
	if (!time) {
		return ["null", "null"];
	}
	//"2017-03-10 09:30:00"
	var timeArr = [];
	//["2017-03-10", "09:30:00"]
	var fullDateArr = time.split(" ");
	//["09","30","00"]
	var fullHourArr = fullDateArr[1].split(":");
	//"09:30"
	var fullHourString = fullHourArr[0] + ':' + fullHourArr[1];
	//["2017-03-10", "09:30"]
	timeArr.push(fullDateArr[0], fullHourString);
	// console.log(timeArr);
	return timeArr;
}

//模仿安卓Toast消息
function toastMsg(msg) {
	if (msg == null || $.trim(msg) == "") return false;
	$("<div>" + msg + "</div>").css({
		"width": "200px",
		"padding": "15px",
		"line-height": "1.5em",
		"text-align": "center",
		"background": "rgba(51,51,51,.8)",
		"color": "#fff",
		"border-radius": "5px",
		"box-shadow": "1px 1px 5px rgba(204,204,204,.4)",
		"position": "fixed",
		"z-index": "10000",
		"bottom": "50%",
		"left": "50%",
		"margin-left": "-100px"
	}).appendTo("body").delay(1000).fadeOut(1000, function () {
		$(this).remove()
	});
};

//轮播图函数
function slider(container, imgArr) {
	var $container = container || $('#banner'),
		$width = $container.parent().width(),
		$height = $container.parent().height(),
		$prevSrc = 'img/left.png',
		$nextSrc = 'img/right.png';

	//插入箭头图片
	$('<img class="arr-img" id="prevImg" src=' + $prevSrc + '>').appendTo($container.parent());
	$('<img class="arr-img" id="nextImg" src=' + $nextSrc + '>').appendTo($container.parent());
	$('<div id="ctrlDiv"><p><span id="curNum">1</span> / <span id="imgSum">20</span></span></p></div>').appendTo($container.parent());

	//将数组中的图片插入html中
	imgArr = imgArr || [];
	var str = '';
	for (var i = 0; i < imgArr.length; i++) {
		str += '<li><img src="' + imgArr[i] + '"></li>';
	}
	var imgLength = imgArr.length;
	// console.log(imgLength);
	$container.html(str);
	//克隆第一张图片
	var cloneFirstImg = $container.find('li').first().clone();
	//克隆最后一张图片
	var cloneLastImg = $container.find('li').last().clone();
	//放在列表最后和最前
	$container.append(cloneFirstImg);
	$container.prepend(cloneLastImg);
	//列表中图片总数，包括克隆的首末两张
	var size = $container.find('li').size();
	// console.log(size);

	//标记图片总数
	$('#imgSum').text(imgLength);

	//容器父元素必须要相对定位，而且hidden
	$container.parent().css({
		position: 'relative',
		overflow: 'hidden'
	});

	//设置容器样式<ul>
	$container.css({
		position: 'absolute',
		left: -$width,
		top: '0px',
		width: $width * size,
		height: $height,
		border: '1px solid green',
		margin: 0,
		padding: 0
	}).find('li')
		.css({
//					position: 'relative',
			float: 'left',
			listStyle: 'none'
		}).find('img')
		.css({
			width: $width,
			height: $height
		});
	//箭头图片样式
	$('.arr-img').css({
		display: 'none',
		position: 'absolute',
		top: '50%',
		transform: 'translateY(-50%)',
		height: '80px',
		opacity: '.7',
		cursor: 'pointer'
	})
	//前一张
	$('#prevImg').css({
		left: '10px',
	});
	//后一张
	$('#nextImg').css({
		right: '10px',
	});
	//下方遮罩层样式
	$('#ctrlDiv').css({
		display: 'none',
		position: 'absolute',
		left: 0,
		bottom: 0,
		zIndex: 999,
		width: $width,
		height: '50px',
		color: 'rgba(255,255,255,.7)',
		background: 'rgba(0,0,0,.5)',
		filter: 'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#7F000000,endColorstr=#7Fffffff)'
	}).find('p').css({
		margin: 0,
		padding: 0,
		textAlign: 'center',
		fontSize: '20px',
		height: '50px',
		lineHeight: '50px'
	});

	//轮播图div，鼠标进入和移出的时候显示隐藏
	$container.parent().hover(function () {
		$('#ctrlDiv').fadeIn(300);
		$('.arr-img').fadeIn(300);
	}, function () {
		$('#ctrlDiv').fadeOut(300);
		$('.arr-img').fadeOut(300);
	});

	//点击箭头图片，切换图片
	var index = 1;
	var curNum = 1;
	$('#prevImg').on('click', function () {
		index--;
		curNum--;
		//console.log('index ' + index);
		//console.log('curNum ' + curNum);
		move();
	});
	$('#nextImg').on('click', function () {
		index++;
		curNum++;
		//console.log('index ' + index);
		//console.log('curNum ' + curNum);
		move();
	});

	function move() {
		if (curNum == size - 1) {
			curNum = 1;
		}
		if (curNum == 0) {
			curNum = imgLength;
		}
		if (index == size) {
			$container.css({left: -$container.find('li').width()});
			index = 2;
		}
		if (index == 0) {
			$container.css({left: -(size - 1) * $container.find('li').width()});
			index = size - 2;
		}
		$container.stop().animate({left: -index * $container.find('li').width()}, 500);
		$('#curNum').text(curNum);
	}
}

//获取N天后的日期，接收参数为空则返回今天日期，接收数字，返回格式yyyy-mm-dd
//getDateStr(-1)--昨天日期
//getDateStr(30)--30天后日期
function getDateStr(count) {
	count = count || 0;
	var d = new Date();
	//获取Count天后的日期
	d.setDate(d.getDate() + count);
	var y = d.getFullYear();
	var m = d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1;
	var d = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();
	return y + "-" + m + "-" + d;
}

//报名
function signUp(meetingId, dom, fn) {
	meetingId = meetingId || href[1];
	//如果没有报名权力，则弹出拒绝对话框
	if (sessionStorage.getItem('accessState') == 0) {
		enterTips(false);
		return false;
	} else {
		//如果有报名权力
		//写入功能点:立即报名功能点
		writeLog(901800040024, 'from=' + sourcePage);
		//如果已经报过名，p标签的自定义属性statusmark应该为true
		if (dom.data('statusmark') == true) {
			toastMsg('您已报名！');
		} else if (dom.data('statusmark') == 'full') {
			toastMsg('对不起，参会人数已满！');
		} else {
			//如果没有报名，发送报名请求
			$.ajax({
				url: host + 'signupMeeting.json',
				type: 'GET',
				data: {
					meetingId: meetingId
				},
				dataType: 'json',
				headers: {'Content-Type': 'application/json'},
				success: function (data) {
					if (fn) {
						fn(data);
					}
				},
				error: function (error) {
					//console.log(error);
					console.log(error.responseJSON.errorCode);
					toastMsg(error.responseJSON.errorMsg);
				}
			});
		}
	}
}


//----------以下为通用点击事件-----------
//搜索按钮鼠标点击
$('.search span').on('click', function () {
	var searchVal = $(this).siblings('input').val();
	if (searchVal) {
		sessionStorage.setItem('searchInput', searchVal);
		//写入功能点，搜索来源
		writeLog(1800040004, 'entance=搜索图标');
		window.location.href = '/work/search.html';
	}
});
//回车键搜索
$('.search input').on('keydown', function (e) {
	if (e.keyCode == 13) {
		var searchVal = $(this).val();
		if (searchVal) {
			sessionStorage.setItem('searchInput', searchVal);
			//写入功能点，搜索来源
			writeLog(1800040004, 'entance=Enter键');
			window.location.href = '/work/search.html';
		}
	}
});
//点击浮层中的X，或者点击浮层中的“知道了”后，浮层隐藏
$('body').on('click', '.float-confirm, .float-cancel', function () {
	$('.float-div').remove();
	isDisplay = true;
});
//点击页脚的软件下载，写入功能点
$('#softwareDownload').on('click', function () {
	writeLog(901800040031, 'from=' + window.localStorage.getItem('currentPage'));
});


